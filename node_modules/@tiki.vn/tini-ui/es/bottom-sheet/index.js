Component({
  props: {
    mask: true,
    maskClose: true,
    animation: true,
    show: true,
    disableScroll: false,
    className: '',
    popupClass: '',
    isContentScrollView: true,
    distanceFromTop: 50,
    zIndex: 2,
    title: 'Bottom sheet',
    buttonTitle: 'ok',
    buttonShape: 'rounded',
    buttonCls: '',
    onClose: undefined,
    onClick: undefined
  },
  didMount: function didMount() {
    this._updateDataSet();
  },
  didUpdate: function didUpdate() {
    this._updateDataSet();
  },
  deriveDataFromProps: function deriveDataFromProps(nextProps) {
    this._handleOverlay(nextProps);
  },
  methods: {
    _handleOverlay: function _handleOverlay(props) {
      var _this = this;

      var mask = props.mask,
          maskClose = props.maskClose,
          show = props.show;

      if (!mask) {
        return;
      }

      if (show) {
        my.showOverlay({
          touchable: !!maskClose,
          success: function success() {
            if (maskClose) {
              _this.onClose();
            }
          }
        });
      } else {
        my.hideOverlay({});
      }
    },
    _updateDataSet: function _updateDataSet() {
      this.dataset = {};

      for (var key in this.props) {
        if (/data-/gi.test(key)) {
          this.dataset[key.replace(/data-/gi, '')] = this.props[key];
        }
      }
    },
    onClose: function onClose() {
      // this.setData({
      //   show: false,
      // });
      var _this$props = this.props,
          mask = _this$props.mask,
          onClose = _this$props.onClose;

      if (mask) {
        my.hideOverlay({});
      }

      if (onClose) {
        onClose({
          target: {
            dataset: this.dataset
          }
        });
      }
    },
    onClick: function onClick() {
      var onClick = this.props.onClick;

      if (onClick) {
        onClick({
          target: {
            dataset: this.dataset
          }
        });
      }
    }
  }
});