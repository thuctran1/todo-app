Component({
  props: {
    onChange: function onChange(nextPage) {},
    max: 3,
    currentPage: 1,
    type: 'page'
  },
  data: {
    pages: []
  },
  didMount: function didMount() {
    var pages = this.calculatePages(this.props.currentPage);
    this.setData({
      pages: pages
    });
  },
  deriveDataFromProps: function deriveDataFromProps(nextProps) {
    this.onPageDidChange(nextProps.currentPage);
  },
  methods: {
    onPageDidChange: function onPageDidChange(nextPage) {
      var pages = [];

      if (this.props.type === 'page') {
        pages = this.calculatePages(nextPage);
      }

      this.setData({
        pages: pages
      });
    },
    jumpToPage: function jumpToPage(e) {
      var nextPage = e.target.dataset.page;
      this.props.onChange(nextPage);
    },
    jumpPrev: function jumpPrev() {
      if (this.props.currentPage === 1) {
        return;
      }

      var nextPage = this.props.currentPage - 1;
      this.props.onChange(nextPage);
    },
    jumpNext: function jumpNext() {
      if (this.props.currentPage === this.props.max) {
        return;
      }

      var nextPage = this.props.currentPage + 1;
      this.props.onChange(nextPage);
    },
    calculatePages: function calculatePages(currentPage) {
      var max = this.props.max;

      if (max <= 5) {
        var pages = [];

        for (var i = 0; i < max; i++) {
          pages.push({
            label: "" + (i + 1),
            page: i + 1
          });
        }

        return pages;
      }

      if (currentPage - 1 <= 2) {
        return [{
          label: '1',
          page: 1
        }, {
          label: '2',
          page: 2
        }, {
          label: '3',
          page: 3
        }, {
          label: '...',
          page: 4
        }, {
          label: "" + max,
          page: max
        }];
      }

      if (max - currentPage <= 2) {
        return [{
          label: '1',
          page: 1
        }, {
          label: '...',
          page: max - 3
        }, {
          label: "" + (max - 2),
          page: max - 2
        }, {
          label: "" + (max - 1),
          page: max - 1
        }, {
          label: "" + max,
          page: max
        }];
      }

      return [{
        label: '1',
        page: 1
      }, {
        label: '...',
        page: currentPage - 2
      }, {
        label: "" + currentPage,
        page: currentPage
      }, {
        label: "...",
        page: currentPage + 2
      }, {
        label: "" + max,
        page: max
      }];
    }
  }
});
export {};