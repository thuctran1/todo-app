import _extends from "@babel/runtime/helpers/extends";

function mapPropsEvent(eventNames) {
  return eventNames.reduce(function (obj, eventName) {
    var _extends2;

    return _extends({}, obj, (_extends2 = {}, _extends2[eventName] = function (e) {
      if (this.props[eventName] instanceof Function) {
        return this.props[eventName](e);
      }
    }, _extends2));
  }, {});
}

Component({
  props: {
    className: '',
    style: '',
    shape: '',
    placeholder: '',
    value: '',
    controlled: false,
    hasError: false,
    errorIconColor: '#ff424f'
  },
  data: {
    __value: ''
  },
  didMount: function didMount() {
    this.onChangeValue(this.props.value);
  },
  deriveDataFromProps: function deriveDataFromProps(nextProps) {
    this.onChangeValue(nextProps.value);
  },
  methods: _extends({}, mapPropsEvent(['onFocus', 'onBlur', 'onConfirm', 'onInput', 'onTapSearchIcon']), {
    onChangeValue: function onChangeValue(newValue) {
      if (this.data.__value !== newValue) {
        this.setData({
          __value: newValue
        });
      }
    },
    onTapCloseIcon: function onTapCloseIcon(e) {
      try {
        this.setData({
          __value: ''
        });
        var onTapCloseIcon = mapPropsEvent(['onTapCloseIcon']).onTapCloseIcon.bind(this);
        onTapCloseIcon(e);
      } catch (error) {
        console.error(error);
      }
    }
  })
});
export {};