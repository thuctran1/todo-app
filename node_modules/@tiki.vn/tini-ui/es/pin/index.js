Component({
  props: {
    className: '',
    style: '',
    label: '',
    length: 4,
    shape: 'rounded',
    disabled: false,
    focus: false,
    secret: false,
    hideCaret: false,
    hasError: false,
    errorMsg: '',
    value: '',
    onChange: function onChange() {},
    onComplete: function onComplete() {}
  },
  data: {
    currentIndex: -1
  },
  methods: {
    onItemFocus: function onItemFocus(event) {
      this.setData({
        currentIndex: event.target.dataset.index
      });
    },
    onItemChange: function onItemChange(event) {
      var currentIndex = this.data.currentIndex;
      var _this$props = this.props,
          length = _this$props.length,
          onChange = _this$props.onChange,
          onComplete = _this$props.onComplete;
      var value = event.detail.value;
      this.values[currentIndex] = value;
      var pin = this.values.join('');
      if (value && currentIndex < length - 1) this.setData({
        currentIndex: currentIndex + 1
      });
      onChange(pin, currentIndex);
      if (pin.length === length) onComplete(pin);
    }
  },
  didMount: function didMount() {
    var _this$props2 = this.props,
        length = _this$props2.length,
        focus = _this$props2.focus,
        value = _this$props2.value;
    this.values = value && typeof value === 'string' ? value.split('').slice(0, length) : Array(length).fill('');
    if (focus) this.setData({
      currentIndex: Math.min(value.length, length) - 1 || 0
    });
  }
});
export {};